name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      
      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8.1.0
      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'pnpm' 

      - name: Install frontend dependencies
        run: pnpm install 
      - name: Install Rust Targets
        run: rustup target add aarch64-apple-darwin
      
      - name: Build the app
        uses: tauri-apps/tauri-action@v0

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }} 
          releaseName: 'TimeGlyd v__VERSION__' 
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: false
          prerelease: false
          updaterJsonKeepUniversal: true
          args: --target universal-apple-darwin
  updater:
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - name: install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl
      - name: Fetch JSON
        id: fetch
        run: |
          URL=$(curl -s https://api.github.com/repos/jaikanthjay46/TimeGlyd/releases/latest | jq -r '.assets[] | select( .name | contains("latest.json")).browser_download_url')
          EOFDS=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "latest_json<<$EOFDS" >> "$GITHUB_ENV"
          curl -Ls $URL >> "$GITHUB_ENV"
          echo "" >> "$GITHUB_ENV"
          echo "$EOFDS" >> "$GITHUB_ENV"
      - name: Gist Write Action
        uses: sergeysova/gist-write-action@v1.0.0
        env:
          GITHUB_TOKEN: ${{secrets.PAT_GIST_TIMEGLYD}}
        with:
          gist_id: 48afb03523c8e7fdb8ed22aad40f49e9
          file_name: timeglyd.json
          content: "${{ env.latest_json }}"

